package com.moppy.control.gui.netpanel;

import com.moppy.core.comms.bridge.BridgeSerial;
import com.moppy.core.comms.bridge.MultiBridge;

/**
 *
 */
public class NetPanelSerial extends NetPanel {

    final BridgeSerial serialBridge;
    
    /**
     * Creates new form NetPanelUDP
     */
    public NetPanelSerial(MultiBridge multiBridge, BridgeSerial bridge) {
        super(multiBridge, bridge);
        this.serialBridge = bridge;
        initComponents();
        initNetPanel(activeCheckbox);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        activeCheckbox = new javax.swing.JCheckBox();

        setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(102, 102, 102)));

        activeCheckbox.setText(String.format("Serial: %s", netBridge.getNetworkIdentifier()));
        activeCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activeCheckboxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(activeCheckbox)
                .addContainerGap(303, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(activeCheckbox)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void activeCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_activeCheckboxActionPerformed
        if (activeCheckbox.isSelected()) {
            activate(activeCheckbox);
        } else {
            deactivate(activeCheckbox);
        }
    }//GEN-LAST:event_activeCheckboxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox activeCheckbox;
    // End of variables declaration//GEN-END:variables
}
